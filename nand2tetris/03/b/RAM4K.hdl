// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=ram0load, b=ram1load, c=ram2load, d=ram3load, e=ram4load, f=ram5load, g=ram6load, h=ram7load);
    RAM512(in=in, address=address[0..8], load=ram0load, out=reg0out);
    RAM512(in=in, address=address[0..8], load=ram1load, out=reg1out);
    RAM512(in=in, address=address[0..8], load=ram2load, out=reg2out);
    RAM512(in=in, address=address[0..8], load=ram3load, out=reg3out);
    RAM512(in=in, address=address[0..8], load=ram4load, out=reg4out);
    RAM512(in=in, address=address[0..8], load=ram5load, out=reg5out);
    RAM512(in=in, address=address[0..8], load=ram6load, out=reg6out);
    RAM512(in=in, address=address[0..8], load=ram7load, out=reg7out);
    Mux8Way16(a=reg0out, b=reg1out, c=reg2out, d=reg3out, e=reg4out, f=reg5out, g=reg6out, h=reg7out, sel=address[9..11], out=out);
}